= content_tag(:div, class: (comment.has_parent? ? 'nested_comment' : 'comment'), id: comment.id.to_s) do
  .comment-header.text-left
    %span.text-left=comment.user.username? ? comment.user.username : comment.user.email
    %time.update-date= 'updated at ' + comment.updated_at.to_formatted_s(:short)
  .comment-body
    %p.text-break.text-monospace.text-justify=comment.body
  .comment-footer.text-left
    - if user_signed_in?
      = link_to 'Reply', '#create-comment', 'data-comment_id': comment.id, class: 'comment-reply-link',
        onclick: 'reply_click(event); return false;'
      - if current_user.id == comment.user.id
        = link_to 'Edit', '#', 'data-toggle': 'modal', 'data-target': '#edit-comment', class: 'comment-edit-link',
          'data-comment_id': comment.id.to_s, onclick: 'edit_click(event); return false;'
        = link_to 'Delete', comment_path(comment.id), method: :delete, class: 'comment-delete-link', remote: true,
                  data: { confirm: 'Do you want to delete this comment and its replies?' }
    - else
      %span Sign in for reply
      = link_to 'Sign in', new_user_session_path
  - comment.comments.each do |reply|
    = render 'comments/comment', comment: reply
